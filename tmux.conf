# Options
set -g default-terminal "screen-256color"
set -g base-index 1
set -g pane-base-index 1
set -g set-titles on
set -g status-keys vi
# Faster Command Sequences
set -s escape-time 0
# mouse can be used
set -g mouse on
set -g set-clipboard on
set -g history-limit 50000


# copy environment variables
set -g update-environment -r

# This enables iterm cursor changes from vim. In vim you'll need:
# if exists('$TMUX')
#   let &t_SI = "\<Esc>[3 q"
#   let &t_EI = "\<Esc>[0 q"
# endif
#
# Source: https://github.com/Casecommons/casecommons_workstation/blob/master/templates/default/dot_tmux.conf.erb
#         https://github.com/Casecommons/vim-config/blob/master/init/tmux.vim
set-option -g terminal-overrides '*88col*:colors=88,*256col*:colors=256,xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cs=\E]12;%p1%s\007:Cr=\E]112\007:Ss=\E]50;CursorShape=%?%p1%{3}%<%t%{0}%e%p1%{2}%-%;%d\007'

# Window options
setw -g mode-keys vi # vi key
setw -g xterm-keys on
setw -g automatic-rename on
setw -g monitor-activity on
#setw -g aggressive-resize on

# Style
set -g status-style "fg=default bg=default"
set -g status-left ""
set -g status-right "#[fg=green]#{host}[#(wemux status_users)]"
#set -g status-position bottom

set -g pane-active-border-style "fg=blue bg=default"
set -g pane-border-style "fg=white bg=default"

set -g display-panes-active-colour red
set -g display-panes-colour blue

# Highlight active window
setw -g window-status-current-style "fg=default bg=red"

# remap prefix to Control + o
set -g prefix C-o
unbind C-b
bind C-o send-prefix

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# copy mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'r' rectangle-toggle
bind -t vi-copy 'y' copy-pipe "reattach-to-user-namespace pbcopy"
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# quick pane cycling
unbind ^F
bind ^F select-pane -t :.+

# switch panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# select window with meta+number
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

 # Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


# splits and windows
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# resize panes
bind -r ^L resize-pane -R 5
bind -r ^J resize-pane -D 5
bind -r ^K resize-pane -U 5
bind -r ^H resize-pane -L 5

# zoom
bind -n M-enter resize-pane -Z
bind -n M-space set -q status

# Copy/paste to system clipboard
bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# Open urls on screen. Requires `brew install urlview`
bind-key u capture-pane \; save-buffer /tmp/active_tmux_buffer \; new-window -n urlview '$SHELL -c "urlview < /tmp/active_tmux_buffer && rm /tmp/active_tmux_buffer"'
